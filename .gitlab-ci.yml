stages:
  - build
  - test
  - staging
  - production

build:
  image: node:latest
  stage: build
  artifacts:
    untracked: true
  before_script:
    - cd ./client && npm ci
    - cd ../server && npm ci
  script:
    - cd ../client && npm run build

test:
  image: node:latest
  stage: test
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: testing
    POSTGRES_USER: test
    PGPASSWORD: test_pass

    DB_HOST: postgres
    DB_NAME: testing
    DB_USERNAME: test
    DB_PASSWORD: test_pass
    ADMIN_SECRET: test
    SESSION_SECRET: c$io$vTHZvp@1pSHDYeAtgqP!yUs9^56p
    SENTRY_DSN: https://ac8fa8071ed5482c8d559a8acb51f8fc@sentry.io/1886726
  dependencies:
    - build
  script:
    - cd ./client && npm test
    - cd ../server && DB_HOST=postgres npm test

staging:
  image: docker:latest
  stage: staging
  services:
    - docker:dind
  before_script:
    - docker info
    - docker login -u $CI_DOCKER_USERNAME -p $CI_DOCKER_PASS
  script:
    - docker build -t $CI_DOCKER_USERNAME/oddity:staging .
    - docker push $CI_DOCKER_USERNAME/oddity:staging

production:
  image: docker:latest
  stage: production
  services:
    - docker:dind
  when: manual
  before_script:
    - docker info
    - docker login -u $CI_DOCKER_USERNAME -p $CI_DOCKER_PASS
  script:
    - docker build -t $CI_DOCKER_USERNAME/oddity:production .
    - docker push $CI_DOCKER_USERNAME/oddity:production
